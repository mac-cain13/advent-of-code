import simd
import Dispatch
import Foundation

let input: [[SIMD3<Float>]] = [
    [SIMD3(487,691,378),SIMD3(-705,-990,-501),SIMD3(20,-9,-149),SIMD3(-636,-925,-419),SIMD3(-730,-859,-433),SIMD3(711,795,-517),SIMD3(-750,331,690),SIMD3(-441,399,-679),SIMD3(846,-544,548),SIMD3(-701,-580,575),SIMD3(935,-441,643),SIMD3(528,772,236),SIMD3(-769,514,618),SIMD3(-664,-620,462),SIMD3(644,-772,-549),SIMD3(490,787,416),SIMD3(146,-164,-16),SIMD3(601,-653,-535),SIMD3(794,-489,717),SIMD3(-807,408,729),SIMD3(-421,451,-484),SIMD3(663,-833,-525),SIMD3(547,766,-619),SIMD3(-684,-507,483),SIMD3(-492,390,-610),SIMD3(536,773,-562),],
    [SIMD3(-769,794,822),SIMD3(537,760,485),SIMD3(-556,685,-558),SIMD3(580,746,604),SIMD3(617,-468,417),SIMD3(592,-409,408),SIMD3(647,778,-963),SIMD3(638,-735,-951),SIMD3(-463,-619,324),SIMD3(472,733,-941),SIMD3(772,-685,-957),SIMD3(-485,811,-619),SIMD3(-738,-591,-846),SIMD3(483,676,-934),SIMD3(-377,-659,349),SIMD3(-635,-696,-900),SIMD3(-22,53,-40),SIMD3(-567,-625,-883),SIMD3(-484,-526,304),SIMD3(-505,616,-567),SIMD3(811,-454,423),SIMD3(-794,862,691),SIMD3(630,-792,-909),SIMD3(599,770,665),SIMD3(-700,876,757),],
    [SIMD3(-874,790,713),SIMD3(554,351,614),SIMD3(-915,726,840),SIMD3(562,-358,848),SIMD3(-424,-696,-268),SIMD3(-834,869,802),SIMD3(326,-481,-670),SIMD3(-632,-402,850),SIMD3(-438,742,-531),SIMD3(-1,-3,-12),SIMD3(-513,816,-589),SIMD3(495,-307,756),SIMD3(-482,807,-358),SIMD3(-546,-461,905),SIMD3(695,403,682),SIMD3(580,-330,829),SIMD3(723,433,-598),SIMD3(475,-408,-652),SIMD3(-570,-724,-343),SIMD3(543,360,712),SIMD3(402,-421,-579),SIMD3(758,441,-709),SIMD3(-168,90,79),SIMD3(752,591,-636),SIMD3(-474,-741,-363),SIMD3(-557,-505,821),],
    [SIMD3(-528,-600,-618),SIMD3(-604,705,-828),SIMD3(344,805,780),SIMD3(-495,-658,-640),SIMD3(-578,771,-714),SIMD3(-661,761,587),SIMD3(671,-333,-433),SIMD3(578,-335,-533),SIMD3(326,716,708),SIMD3(388,834,679),SIMD3(-102,40,55),SIMD3(-538,-673,589),SIMD3(613,487,-653),SIMD3(-696,628,716),SIMD3(680,-687,491),SIMD3(700,446,-767),SIMD3(-680,-691,632),SIMD3(718,-340,-473),SIMD3(-537,-755,-542),SIMD3(670,-666,501),SIMD3(-651,-517,590),SIMD3(743,-669,585),SIMD3(749,428,-598),SIMD3(3,162,-34),SIMD3(-696,756,552),SIMD3(-678,796,-750),],
    [SIMD3(-626,969,628),SIMD3(727,-629,-710),SIMD3(659,880,-828),SIMD3(856,-769,-701),SIMD3(-524,-476,-534),SIMD3(782,644,690),SIMD3(719,804,-737),SIMD3(-385,-573,-483),SIMD3(732,731,-810),SIMD3(-736,652,-522),SIMD3(-780,887,632),SIMD3(-502,-481,744),SIMD3(-503,-386,765),SIMD3(53,157,-91),SIMD3(547,-341,547),SIMD3(-475,-408,-523),SIMD3(576,-333,548),SIMD3(-768,773,-558),SIMD3(-815,954,611),SIMD3(-835,755,-619),SIMD3(-128,33,-103),SIMD3(451,-325,410),SIMD3(-450,-320,788),SIMD3(803,-629,-672),SIMD3(810,626,671),SIMD3(833,711,598),],
    [SIMD3(-801,-983,-369),SIMD3(742,670,528),SIMD3(352,-876,640),SIMD3(-828,-828,-358),SIMD3(-542,-469,633),SIMD3(-476,-408,629),SIMD3(439,-588,-252),SIMD3(-962,691,-429),SIMD3(704,704,619),SIMD3(553,270,-619),SIMD3(-85,-89,56),SIMD3(456,395,-574),SIMD3(-658,662,671),SIMD3(-851,716,-306),SIMD3(555,703,493),SIMD3(-783,-839,-334),SIMD3(327,-765,498),SIMD3(-526,641,525),SIMD3(464,253,-504),SIMD3(-465,-491,565),SIMD3(296,-530,-272),SIMD3(-884,667,-404),SIMD3(378,-856,397),SIMD3(411,-642,-262),SIMD3(-553,771,599),],
    [SIMD3(522,325,-368),SIMD3(-12,-135,93),SIMD3(700,-606,-588),SIMD3(-739,-553,-393),SIMD3(684,-743,704),SIMD3(718,-730,558),SIMD3(-676,-664,-485),SIMD3(-559,-578,-389),SIMD3(-515,602,562),SIMD3(754,-641,627),SIMD3(-398,639,-608),SIMD3(-406,-494,408),SIMD3(672,338,-363),SIMD3(-531,-429,402),SIMD3(325,455,872),SIMD3(-667,641,-590),SIMD3(611,-528,-484),SIMD3(-93,-14,-24),SIMD3(-395,571,532),SIMD3(-504,567,665),SIMD3(315,463,811),SIMD3(642,403,-297),SIMD3(333,340,724),SIMD3(-371,-484,479),SIMD3(-475,575,-556),SIMD3(504,-612,-569),],
    [SIMD3(820,-710,-530),SIMD3(-759,-563,-733),SIMD3(563,721,-424),SIMD3(-739,-806,-707),SIMD3(594,751,-304),SIMD3(-451,593,-563),SIMD3(117,-42,23),SIMD3(-648,509,552),SIMD3(647,-738,698),SIMD3(-435,489,-622),SIMD3(-78,94,-7),SIMD3(787,-675,-343),SIMD3(710,411,416),SIMD3(702,472,406),SIMD3(630,-755,568),SIMD3(-648,-705,-758),SIMD3(-740,-837,799),SIMD3(689,-840,604),SIMD3(-503,535,664),SIMD3(825,559,424),SIMD3(-777,-705,786),SIMD3(598,618,-413),SIMD3(-392,570,-630),SIMD3(821,-584,-381),SIMD3(-729,-753,741),SIMD3(-548,501,458),],
    [SIMD3(34,42,2),SIMD3(-762,-436,-716),SIMD3(545,725,-614),SIMD3(-714,-388,-671),SIMD3(835,-431,600),SIMD3(802,-466,413),SIMD3(-456,314,716),SIMD3(836,-557,451),SIMD3(385,566,691),SIMD3(-398,334,859),SIMD3(-725,-304,-729),SIMD3(527,636,699),SIMD3(704,-301,-534),SIMD3(-724,-335,777),SIMD3(-703,579,-286),SIMD3(711,830,-641),SIMD3(660,726,-593),SIMD3(-744,-578,803),SIMD3(-856,560,-313),SIMD3(645,-386,-498),SIMD3(-840,593,-352),SIMD3(-41,-60,130),SIMD3(402,681,602),SIMD3(662,-403,-628),SIMD3(-633,-436,828),SIMD3(-510,324,744),],
    [SIMD3(598,593,-270),SIMD3(-609,-319,494),SIMD3(-121,-66,173),SIMD3(-681,-848,-458),SIMD3(-824,556,-346),SIMD3(328,-526,-595),SIMD3(50,22,0),SIMD3(-480,-336,567),SIMD3(-658,-744,-504),SIMD3(-511,817,851),SIMD3(382,-511,538),SIMD3(-507,646,809),SIMD3(511,674,-363),SIMD3(-791,423,-298),SIMD3(-750,479,-250),SIMD3(296,-435,531),SIMD3(393,-432,714),SIMD3(273,-532,-504),SIMD3(493,521,695),SIMD3(507,636,831),SIMD3(350,580,745),SIMD3(556,750,-289),SIMD3(262,-621,-694),SIMD3(-486,617,802),SIMD3(-762,-759,-518),SIMD3(-496,-452,479),],
    [SIMD3(341,491,344),SIMD3(882,467,-526),SIMD3(354,-432,899),SIMD3(-563,534,602),SIMD3(-44,8,-29),SIMD3(431,-531,882),SIMD3(704,-745,-797),SIMD3(788,440,-411),SIMD3(395,618,460),SIMD3(653,-823,-779),SIMD3(741,425,-426),SIMD3(92,93,90),SIMD3(-582,-590,-708),SIMD3(739,-754,-642),SIMD3(-492,-767,681),SIMD3(-542,535,717),SIMD3(-523,586,-538),SIMD3(-583,-677,-779),SIMD3(-613,-777,-781),SIMD3(493,500,417),SIMD3(-521,482,-415),SIMD3(402,-588,864),SIMD3(-515,430,551),SIMD3(-539,472,-622),SIMD3(-487,-713,631),SIMD3(-336,-811,603),],
    [SIMD3(475,-297,895),SIMD3(668,-637,-635),SIMD3(435,598,-762),SIMD3(-608,664,632),SIMD3(-891,-570,-711),SIMD3(-754,-628,582),SIMD3(279,899,487),SIMD3(356,844,327),SIMD3(-862,-487,-586),SIMD3(-692,716,-548),SIMD3(679,-686,-703),SIMD3(404,-442,856),SIMD3(-711,722,-744),SIMD3(490,-326,855),SIMD3(-516,775,695),SIMD3(504,687,-798),SIMD3(-607,800,-655),SIMD3(-831,-556,633),SIMD3(-930,-506,-754),SIMD3(581,585,-728),SIMD3(719,-776,-538),SIMD3(-512,750,515),SIMD3(-760,-658,540),SIMD3(285,834,362),SIMD3(-90,7,1),],
    [SIMD3(555,-400,-753),SIMD3(-522,773,633),SIMD3(672,510,432),SIMD3(-98,146,-113),SIMD3(-793,-473,494),SIMD3(290,-402,692),SIMD3(651,-473,-678),SIMD3(694,431,535),SIMD3(-462,872,559),SIMD3(686,694,533),SIMD3(284,881,-333),SIMD3(498,827,-336),SIMD3(421,799,-392),SIMD3(257,-566,756),SIMD3(-732,-729,-688),SIMD3(549,-434,-657),SIMD3(-841,762,-479),SIMD3(-813,-686,-680),SIMD3(-801,-573,400),SIMD3(-839,814,-654),SIMD3(-709,-670,-621),SIMD3(254,-336,698),SIMD3(-767,-618,606),SIMD3(-855,754,-475),SIMD3(-12,10,18),SIMD3(-471,833,777),],
    [SIMD3(-806,-583,-382),SIMD3(-910,778,-794),SIMD3(399,-656,-338),SIMD3(437,241,-695),SIMD3(526,-846,898),SIMD3(646,683,432),SIMD3(-794,-487,-438),SIMD3(684,764,575),SIMD3(387,-701,-506),SIMD3(-921,663,-773),SIMD3(-792,-903,710),SIMD3(405,-569,-392),SIMD3(442,299,-637),SIMD3(-84,-105,34),SIMD3(556,-694,941),SIMD3(458,-705,950),SIMD3(-865,-909,860),SIMD3(-754,-874,868),SIMD3(557,723,511),SIMD3(-745,362,485),SIMD3(-736,-635,-513),SIMD3(-687,287,559),SIMD3(464,449,-714),SIMD3(-931,536,-819),SIMD3(-514,331,494),],
    [SIMD3(-744,-464,-592),SIMD3(-488,811,-720),SIMD3(747,-355,-383),SIMD3(534,643,-492),SIMD3(-701,-383,-584),SIMD3(-588,-395,496),SIMD3(818,-725,873),SIMD3(698,643,-620),SIMD3(-396,943,837),SIMD3(618,659,827),SIMD3(-49,136,76),SIMD3(857,-734,655),SIMD3(660,688,653),SIMD3(663,678,-625),SIMD3(-488,-403,590),SIMD3(739,-341,-379),SIMD3(799,-357,-558),SIMD3(-685,-487,-525),SIMD3(-407,859,779),SIMD3(-359,811,824),SIMD3(758,-674,729),SIMD3(661,801,809),SIMD3(-377,669,-695),SIMD3(-397,912,-669),SIMD3(121,70,8),SIMD3(-633,-429,702),],
    [SIMD3(384,490,510),SIMD3(-855,-462,-762),SIMD3(283,547,407),SIMD3(525,-411,-670),SIMD3(-84,78,-21),SIMD3(-777,-371,-688),SIMD3(362,630,492),SIMD3(424,-473,330),SIMD3(-677,-750,420),SIMD3(-692,-654,595),SIMD3(-873,690,553),SIMD3(476,-648,328),SIMD3(-692,820,-572),SIMD3(-838,843,561),SIMD3(605,559,-790),SIMD3(-880,665,596),SIMD3(534,416,-825),SIMD3(-741,-396,-788),SIMD3(-792,775,-648),SIMD3(-738,-789,611),SIMD3(484,-652,314),SIMD3(507,513,-661),SIMD3(689,-539,-670),SIMD3(74,168,-91),SIMD3(-744,650,-605),SIMD3(560,-406,-705),],
    [SIMD3(-299,-806,592),SIMD3(329,667,377),SIMD3(629,-790,-717),SIMD3(-289,-778,646),SIMD3(629,-662,-553),SIMD3(594,-795,-682),SIMD3(-747,653,-778),SIMD3(-309,-921,704),SIMD3(-455,-868,-590),SIMD3(-568,290,262),SIMD3(99,-58,-13),SIMD3(461,-890,469),SIMD3(-737,632,-768),SIMD3(413,609,388),SIMD3(-535,251,246),SIMD3(613,657,-637),SIMD3(461,654,340),SIMD3(-34,-36,-162),SIMD3(471,639,-680),SIMD3(603,-865,358),SIMD3(-411,-839,-489),SIMD3(-554,224,399),SIMD3(-393,-750,-561),SIMD3(360,-839,378),SIMD3(584,483,-679),SIMD3(-810,635,-684),],
    [SIMD3(-465,422,565),SIMD3(-594,642,-873),SIMD3(574,-636,-623),SIMD3(465,-905,595),SIMD3(-489,-521,608),SIMD3(-465,641,-835),SIMD3(-546,-590,547),SIMD3(-481,345,450),SIMD3(844,364,-415),SIMD3(-506,-361,-525),SIMD3(424,-850,639),SIMD3(407,631,440),SIMD3(-48,-32,-7),SIMD3(-567,-400,-716),SIMD3(728,447,-457),SIMD3(420,652,324),SIMD3(-512,591,-798),SIMD3(-564,283,572),SIMD3(540,-552,-530),SIMD3(-552,-496,-541),SIMD3(-444,-568,658),SIMD3(760,409,-574),SIMD3(665,-651,-603),SIMD3(359,580,334),SIMD3(431,-815,461),],
    [SIMD3(-723,-617,-606),SIMD3(733,-685,553),SIMD3(794,659,-525),SIMD3(153,39,17),SIMD3(-414,580,-625),SIMD3(-731,539,662),SIMD3(-466,-577,481),SIMD3(525,-648,-360),SIMD3(-760,-664,-656),SIMD3(-747,599,483),SIMD3(647,-565,-298),SIMD3(640,-664,-437),SIMD3(802,922,-527),SIMD3(-354,481,-551),SIMD3(529,554,400),SIMD3(-363,520,-769),SIMD3(-798,-535,-657),SIMD3(-733,591,487),SIMD3(-450,-623,346),SIMD3(-30,122,116),SIMD3(54,177,-59),SIMD3(-641,-562,385),SIMD3(683,-640,506),SIMD3(392,472,341),SIMD3(780,843,-424),SIMD3(606,526,344),SIMD3(622,-583,575),],
    [SIMD3(393,-422,-416),SIMD3(614,652,689),SIMD3(-453,823,-633),SIMD3(-591,591,777),SIMD3(868,661,-720),SIMD3(872,652,-765),SIMD3(722,-397,642),SIMD3(-455,729,-591),SIMD3(-614,489,819),SIMD3(-752,-796,837),SIMD3(-434,-527,-596),SIMD3(719,-470,558),SIMD3(849,774,-686),SIMD3(740,-460,548),SIMD3(537,722,710),SIMD3(-375,-391,-541),SIMD3(-393,-440,-710),SIMD3(-781,-752,736),SIMD3(-396,811,-720),SIMD3(388,-562,-476),SIMD3(592,582,617),SIMD3(386,-469,-376),SIMD3(-86,62,-37),SIMD3(-559,573,721),SIMD3(-663,-814,765),SIMD3(9,-110,58),],
    [SIMD3(-551,607,-862),SIMD3(-88,95,-3),SIMD3(424,708,500),SIMD3(-540,-323,674),SIMD3(505,-288,601),SIMD3(561,764,-751),SIMD3(731,797,-699),SIMD3(576,-305,533),SIMD3(-495,664,553),SIMD3(327,544,527),SIMD3(-628,699,682),SIMD3(686,721,-799),SIMD3(470,579,598),SIMD3(-769,-610,-687),SIMD3(-451,-341,746),SIMD3(-810,-697,-801),SIMD3(84,33,-94),SIMD3(-485,581,-748),SIMD3(-828,-746,-632),SIMD3(-500,699,518),SIMD3(409,-279,-664),SIMD3(516,-231,-806),SIMD3(466,-237,-672),SIMD3(-422,-385,645),SIMD3(610,-342,704),SIMD3(-460,681,-784),],
    [SIMD3(-872,-942,-570),SIMD3(-409,-612,627),SIMD3(821,489,873),SIMD3(-635,598,685),SIMD3(532,726,-678),SIMD3(-891,-990,-345),SIMD3(457,-540,795),SIMD3(675,-490,-612),SIMD3(-615,416,693),SIMD3(444,-408,758),SIMD3(502,-492,747),SIMD3(-701,432,742),SIMD3(100,-97,-80),SIMD3(-518,-578,738),SIMD3(-378,538,-769),SIMD3(-324,665,-885),SIMD3(545,-507,-629),SIMD3(-476,656,-812),SIMD3(-12,-65,96),SIMD3(860,456,889),SIMD3(639,-405,-671),SIMD3(-802,-957,-514),SIMD3(580,622,-627),SIMD3(559,621,-512),SIMD3(887,475,736),SIMD3(-422,-579,827),],
    [SIMD3(661,315,-819),SIMD3(820,359,-750),SIMD3(-714,876,-774),SIMD3(-770,828,-815),SIMD3(-820,-651,380),SIMD3(-400,-660,-735),SIMD3(-637,780,-848),SIMD3(363,-595,-906),SIMD3(640,-365,447),SIMD3(391,854,266),SIMD3(-398,-760,-828),SIMD3(731,-443,521),SIMD3(422,-540,-770),SIMD3(-600,856,574),SIMD3(-519,763,487),SIMD3(-723,-553,338),SIMD3(381,-426,-857),SIMD3(-405,-720,-875),SIMD3(603,327,-711),SIMD3(-443,837,532),SIMD3(-84,-80,-72),SIMD3(-665,-575,371),SIMD3(433,793,405),SIMD3(449,675,295),SIMD3(706,-479,421),SIMD3(69,48,-44),],
    [SIMD3(-639,-708,-780),SIMD3(-390,-377,515),SIMD3(632,655,668),SIMD3(676,815,-901),SIMD3(-811,604,468),SIMD3(696,-725,-662),SIMD3(-684,-782,-856),SIMD3(-707,722,530),SIMD3(622,-821,-585),SIMD3(684,552,647),SIMD3(701,615,740),SIMD3(-726,-801,-699),SIMD3(634,-553,653),SIMD3(583,715,-899),SIMD3(-490,608,-576),SIMD3(-523,630,-634),SIMD3(-771,586,479),SIMD3(-532,706,-479),SIMD3(-401,-567,426),SIMD3(530,-567,638),SIMD3(-456,-476,420),SIMD3(723,775,-894),SIMD3(20,-21,-1),SIMD3(553,-613,742),SIMD3(663,-773,-529),SIMD3(-164,63,-101),],
    [SIMD3(-413,-612,645),SIMD3(709,-446,467),SIMD3(-743,883,386),SIMD3(-520,-494,-821),SIMD3(821,818,306),SIMD3(721,959,348),SIMD3(167,167,-132),SIMD3(-613,933,451),SIMD3(832,-444,363),SIMD3(-454,506,-852),SIMD3(-694,887,358),SIMD3(-498,-362,-761),SIMD3(625,-462,353),SIMD3(-2,137,-25),SIMD3(-470,-503,-890),SIMD3(466,-536,-896),SIMD3(-529,-732,603),SIMD3(-388,595,-734),SIMD3(450,781,-864),SIMD3(468,730,-942),SIMD3(539,-505,-709),SIMD3(836,865,321),SIMD3(468,-506,-796),SIMD3(605,816,-873),SIMD3(-424,-611,593),SIMD3(-466,716,-786),],
    [SIMD3(457,-708,-871),SIMD3(-893,-745,-852),SIMD3(-643,609,-746),SIMD3(-425,429,573),SIMD3(788,-685,307),SIMD3(830,-693,364),SIMD3(-529,-647,690),SIMD3(-544,-866,645),SIMD3(-470,322,440),SIMD3(-445,408,480),SIMD3(836,-827,414),SIMD3(744,653,-642),SIMD3(-881,-832,-909),SIMD3(-38,25,-47),SIMD3(682,624,-524),SIMD3(321,-653,-930),SIMD3(370,-822,-912),SIMD3(-538,-672,631),SIMD3(762,512,474),SIMD3(-559,707,-691),SIMD3(-661,665,-714),SIMD3(779,580,403),SIMD3(-799,-703,-850),SIMD3(-89,-147,-128),SIMD3(726,725,-553),SIMD3(725,683,508),],
    [SIMD3(807,-677,543),SIMD3(-434,796,-819),SIMD3(-605,-566,715),SIMD3(484,-520,-321),SIMD3(-554,-766,-728),SIMD3(-394,803,-772),SIMD3(624,467,-844),SIMD3(-594,-838,-797),SIMD3(788,-825,514),SIMD3(-503,381,436),SIMD3(-657,-745,-780),SIMD3(-7,61,81),SIMD3(755,-646,528),SIMD3(-487,-628,611),SIMD3(-623,-577,675),SIMD3(-601,478,394),SIMD3(91,-97,9),SIMD3(-579,536,427),SIMD3(540,470,-771),SIMD3(629,619,550),SIMD3(671,445,579),SIMD3(530,449,-781),SIMD3(579,-536,-343),SIMD3(-494,801,-679),SIMD3(628,463,437),SIMD3(418,-547,-318),],
    [SIMD3(-76,6,-14),SIMD3(-912,890,505),SIMD3(-689,-428,513),SIMD3(474,720,-821),SIMD3(-445,-304,-432),SIMD3(-653,814,-726),SIMD3(-658,-555,372),SIMD3(454,-688,-720),SIMD3(-591,-379,-404),SIMD3(-970,744,449),SIMD3(-567,869,-667),SIMD3(298,754,792),SIMD3(231,733,827),SIMD3(-578,785,-623),SIMD3(541,812,-770),SIMD3(381,-615,-707),SIMD3(412,-436,780),SIMD3(-917,837,549),SIMD3(-687,-367,376),SIMD3(430,-497,847),SIMD3(216,750,638),SIMD3(533,-400,748),SIMD3(305,-706,-647),SIMD3(559,793,-798),SIMD3(-495,-399,-387),],
    [SIMD3(-617,-572,-936),SIMD3(53,19,-26),SIMD3(743,835,-690),SIMD3(688,-413,-776),SIMD3(-845,883,722),SIMD3(894,933,-662),SIMD3(691,-350,563),SIMD3(-714,-577,652),SIMD3(715,-308,-610),SIMD3(-528,-457,-919),SIMD3(-661,634,-701),SIMD3(647,799,720),SIMD3(709,-360,356),SIMD3(617,899,722),SIMD3(738,889,-740),SIMD3(707,-464,479),SIMD3(-858,849,707),SIMD3(-746,-649,616),SIMD3(-43,82,-175),SIMD3(-720,546,-652),SIMD3(-749,793,742),SIMD3(648,712,649),SIMD3(667,-412,-661),SIMD3(-625,-502,-794),SIMD3(-710,518,-622),SIMD3(-849,-506,564),],
    [SIMD3(-38,-24,-144),SIMD3(519,-671,-764),SIMD3(623,-664,-808),SIMD3(-435,441,-887),SIMD3(325,611,752),SIMD3(-984,-831,359),SIMD3(388,-594,494),SIMD3(571,383,-452),SIMD3(393,-627,-790),SIMD3(-852,-868,372),SIMD3(-885,556,460),SIMD3(-813,-900,-507),SIMD3(-450,497,-957),SIMD3(-987,598,554),SIMD3(264,619,742),SIMD3(362,-739,606),SIMD3(412,734,734),SIMD3(354,-639,700),SIMD3(516,354,-572),SIMD3(-814,-811,-603),SIMD3(-902,539,590),SIMD3(-780,-700,-494),SIMD3(-173,-73,-7),SIMD3(-402,272,-976),SIMD3(568,498,-510),SIMD3(-900,-820,417),],
    [SIMD3(-452,-310,-592),SIMD3(955,-695,483),SIMD3(635,652,-221),SIMD3(-531,703,476),SIMD3(597,633,896),SIMD3(-391,-377,-610),SIMD3(-808,717,-368),SIMD3(795,-519,-806),SIMD3(-316,-760,736),SIMD3(-356,-670,571),SIMD3(799,-365,-724),SIMD3(-600,614,512),SIMD3(488,664,884),SIMD3(778,-330,-791),SIMD3(-797,885,-277),SIMD3(392,674,856),SIMD3(-454,601,546),SIMD3(-367,-621,639),SIMD3(932,-642,549),SIMD3(65,61,163),SIMD3(624,831,-312),SIMD3(911,-643,644),SIMD3(564,755,-330),SIMD3(-355,-409,-489),SIMD3(-785,725,-253),SIMD3(116,180,1),],
    [SIMD3(-640,563,868),SIMD3(-69,-5,-92),SIMD3(-497,615,765),SIMD3(-838,-611,-696),SIMD3(458,-520,358),SIMD3(423,-487,545),SIMD3(-574,-937,636),SIMD3(585,786,839),SIMD3(667,770,789),SIMD3(-644,-795,644),SIMD3(-733,-777,-669),SIMD3(661,569,-410),SIMD3(549,-486,396),SIMD3(-689,-920,547),SIMD3(293,-618,-589),SIMD3(395,-660,-683),SIMD3(378,-677,-553),SIMD3(-734,-662,-648),SIMD3(-682,478,-688),SIMD3(-796,562,-672),SIMD3(-569,651,733),SIMD3(671,680,764),SIMD3(770,538,-422),SIMD3(866,528,-450),SIMD3(37,-119,68),SIMD3(-786,355,-690),],
    [SIMD3(-837,932,387),SIMD3(-798,673,-737),SIMD3(463,639,-593),SIMD3(667,-571,276),SIMD3(-59,21,-58),SIMD3(-696,833,-745),SIMD3(-561,-584,-535),SIMD3(-460,-599,-712),SIMD3(287,-697,-715),SIMD3(-520,-580,608),SIMD3(669,-582,395),SIMD3(355,-529,-734),SIMD3(-937,876,277),SIMD3(457,597,-563),SIMD3(-612,-691,519),SIMD3(755,640,424),SIMD3(606,619,519),SIMD3(386,690,-665),SIMD3(-539,-624,-759),SIMD3(-548,-602,619),SIMD3(-869,855,383),SIMD3(326,-654,-651),SIMD3(694,744,462),SIMD3(-866,845,-782),SIMD3(710,-661,243),],
    [SIMD3(-528,-726,-488),SIMD3(833,-679,-721),SIMD3(459,448,-323),SIMD3(858,-711,-602),SIMD3(-609,402,598),SIMD3(576,795,912),SIMD3(524,478,-257),SIMD3(-338,-387,401),SIMD3(-622,436,744),SIMD3(-520,366,667),SIMD3(584,805,851),SIMD3(697,-457,608),SIMD3(115,-31,25),SIMD3(-407,509,-444),SIMD3(-563,-619,-344),SIMD3(-498,-363,413),SIMD3(916,-799,-718),SIMD3(-506,-478,390),SIMD3(446,598,-328),SIMD3(-485,420,-548),SIMD3(812,-399,605),SIMD3(-491,616,-529),SIMD3(-684,-601,-486),SIMD3(841,-519,660),SIMD3(461,787,764),SIMD3(-24,46,111),],
    [SIMD3(841,890,670),SIMD3(-722,757,-796),SIMD3(611,-301,-843),SIMD3(-461,-469,605),SIMD3(-99,157,-4),SIMD3(-567,447,464),SIMD3(-647,558,405),SIMD3(654,738,-533),SIMD3(857,770,625),SIMD3(435,-364,-845),SIMD3(476,-284,-785),SIMD3(-605,671,-700),SIMD3(-697,-651,-548),SIMD3(633,832,-624),SIMD3(615,-701,597),SIMD3(-604,-549,-477),SIMD3(838,748,552),SIMD3(-655,-621,-554),SIMD3(-621,-477,707),SIMD3(-449,-432,775),SIMD3(627,-568,700),SIMD3(-542,782,-792),SIMD3(623,-643,795),SIMD3(-663,566,542),SIMD3(71,-11,-96),SIMD3(634,742,-770),],
    [SIMD3(-650,537,332),SIMD3(606,-373,-595),SIMD3(774,-305,-614),SIMD3(-495,-723,642),SIMD3(701,521,-570),SIMD3(-675,-719,667),SIMD3(-756,678,-584),SIMD3(661,543,-794),SIMD3(728,674,665),SIMD3(-570,478,443),SIMD3(703,731,473),SIMD3(764,-524,614),SIMD3(-613,-404,-664),SIMD3(-768,848,-547),SIMD3(104,96,34),SIMD3(-63,-28,-30),SIMD3(659,695,466),SIMD3(-612,-627,556),SIMD3(-520,-475,-766),SIMD3(731,-344,-678),SIMD3(676,442,-617),SIMD3(-596,780,-592),SIMD3(-562,-481,-736),SIMD3(568,-543,608),SIMD3(675,-628,692),SIMD3(-554,615,451),],
    [SIMD3(283,785,-403),SIMD3(227,-647,-636),SIMD3(-470,519,-585),SIMD3(-909,335,519),SIMD3(730,-425,689),SIMD3(-747,-892,591),SIMD3(-44,-163,36),SIMD3(-617,-875,574),SIMD3(-899,274,511),SIMD3(374,796,-571),SIMD3(415,526,776),SIMD3(-878,-500,-624),SIMD3(353,578,632),SIMD3(-164,-26,-23),SIMD3(-540,442,-687),SIMD3(-890,-609,-655),SIMD3(-850,-404,-614),SIMD3(800,-440,633),SIMD3(295,581,747),SIMD3(-891,422,396),SIMD3(819,-392,858),SIMD3(259,773,-563),SIMD3(318,-636,-457),SIMD3(-711,-977,532),SIMD3(-506,588,-674),SIMD3(336,-576,-533),],
    [SIMD3(740,545,620),SIMD3(552,-736,-843),SIMD3(-490,-590,-452),SIMD3(704,666,652),SIMD3(-715,549,-881),SIMD3(434,773,-775),SIMD3(-601,739,493),SIMD3(-802,-632,558),SIMD3(525,697,-835),SIMD3(643,648,719),SIMD3(728,-583,408),SIMD3(452,624,-848),SIMD3(739,-515,359),SIMD3(590,-736,-919),SIMD3(-831,-507,475),SIMD3(-693,611,543),SIMD3(-782,760,526),SIMD3(779,-680,269),SIMD3(-870,-464,539),SIMD3(-447,-500,-419),SIMD3(561,-876,-972),SIMD3(-627,471,-852),SIMD3(-488,-579,-571),SIMD3(-88,-51,-4),SIMD3(-617,549,-836),],
    [SIMD3(6,2,-68),SIMD3(-96,117,-175),SIMD3(457,891,-835),SIMD3(362,-552,-896),SIMD3(243,810,694),SIMD3(635,929,-847),SIMD3(318,-590,-978),SIMD3(-515,-507,-596),SIMD3(-642,587,742),SIMD3(-36,177,16),SIMD3(584,-402,801),SIMD3(-710,658,725),SIMD3(-497,-369,689),SIMD3(-569,-458,707),SIMD3(-598,-340,645),SIMD3(-793,757,-462),SIMD3(614,870,-725),SIMD3(696,-287,791),SIMD3(-900,624,-507),SIMD3(-539,692,688),SIMD3(-814,664,-482),SIMD3(387,792,729),SIMD3(-613,-562,-680),SIMD3(638,-430,811),SIMD3(-557,-530,-698),SIMD3(398,837,705),SIMD3(524,-562,-961),],
    [SIMD3(-628,568,651),SIMD3(89,-18,114),SIMD3(617,568,808),SIMD3(539,612,-727),SIMD3(-595,571,583),SIMD3(-43,48,-3),SIMD3(-806,-610,-397),SIMD3(394,-541,-610),SIMD3(362,-659,499),SIMD3(-660,-345,847),SIMD3(-712,556,-590),SIMD3(-635,-418,882),SIMD3(349,-545,422),SIMD3(412,-490,566),SIMD3(-760,599,-465),SIMD3(566,776,-824),SIMD3(-848,-645,-575),SIMD3(416,-559,-750),SIMD3(-564,768,623),SIMD3(637,741,-681),SIMD3(445,657,809),SIMD3(582,648,837),SIMD3(-841,-602,-550),SIMD3(-660,523,-420),SIMD3(315,-456,-693),SIMD3(-648,-328,721),]
]

// Generates all the 24 rotation transforms of a cube that map it to itself
// Explainer about the Cube Rotation: https://www.euclideanspace.com/maths/discrete/groups/categorise/finite/cube/index.htm
// The 24 valid rotations: https://www.euclideanspace.com/maths/algebra/matrix/transforms/examples/index.htm
func generateProperRotationMatrices(scalars: [(column: Int, row: Int, value: Float)] = []) -> [simd_float3x3] {
    // While not having 3 scalars to fill the matrix with...
    guard scalars.count == 3 else {
        return [0,1,2]
            // Filter our the row positions that are already used
            .filter { !scalars.map(\.row).contains($0) }
            .flatMap { row in
                [1, -1].flatMap { value in
                    // Call ourselves with all available row positions and both possible values
                    generateProperRotationMatrices(scalars: scalars + [(scalars.count, row, value)])
                }
            }
    }

    let matrix = scalars.reduce(into: simd_float3x3()) { partialMatrix, scalar in
        partialMatrix[scalar.column, scalar.row] = scalar.value
    }

    // Filter out improper rotations that not only rotate, but also mirror
    // See also: https://en.wikipedia.org/wiki/Improper_rotation
    // And: https://en.wikipedia.org/wiki/Rotation_matrix
    if matrix.determinant == 1 { return [matrix] }
    else { return [] }
}

let rotationMatrices = generateProperRotationMatrices()

typealias ScannerOverlap = (scannerId: Int, overlapsWithScannerId: Int?, rotation: simd_float3x3, translation: SIMD3<Float>)

struct Scanner {
    let id: Int
    let beacons: [SIMD3<Float>]
    
    init(id: Int, beacons: [SIMD3<Float>]) {
        self.id = id
        self.beacons = beacons
    }

    func beaconsCombined(with scanners: [Scanner]) -> (beacons: [SIMD3<Float>], remainingScanners: [Scanner]) {
        let overlappingScanners = overlappingScanners(scanners: scanners)
        
        var overlappingBeacons: [SIMD3<Float>] = []
        var remainingScanners = scanners.filter { !overlappingScanners.map(\.scanner.id).contains($0.id) }
        for (overlappingScanner, rotation, translation) in overlappingScanners {
            let (beacons, remaining) = overlappingScanner.beaconsCombined(with: remainingScanners)
            overlappingBeacons.append(contentsOf: beacons.map { beacon in rotation * beacon + translation })
            remainingScanners = remaining
        }

        return (beacons + overlappingBeacons, remainingScanners)
    }

    func relativeScannerPositions(scanners: [Scanner]) -> (positions: [SIMD3<Float>], remainingScanners: [Scanner]) {
        let overlappingScanners = overlappingScanners(scanners: scanners)
        
        var positions: [SIMD3<Float>] = []
        var remainingScanners = scanners.filter { !overlappingScanners.map(\.scanner.id).contains($0.id) }
        for (overlappingScanner, rotation, translation) in overlappingScanners {
            let (pos, remaining) = overlappingScanner.relativeScannerPositions(scanners: remainingScanners)
            positions.append(contentsOf: pos.map { p in rotation * p + translation })
            remainingScanners = remaining
        }

        return ([SIMD3()] + positions, remainingScanners)
    }
    
    private func overlappingScanners(scanners: [Scanner]) -> [(scanner: Scanner, rotation: simd_float3x3, translation: SIMD3<Float>)] {
        print("Searching for scanner overlapping with scanner \(id)...")
        assert(!scanners.contains { id == $0.id })
        guard scanners.count > 0 else { return [] }
        
        var overlappingScanners: [(scanner: Scanner, rotation: simd_float3x3, translation: SIMD3<Float>)] = []
        let lock = NSRecursiveLock()
        DispatchQueue.concurrentPerform(iterations: scanners.count) { iteration in
            let scanner = scanners[iteration]
            guard let transform = scanner.generateTransform(towards: self) else {
                print("  Scanner", scanner.id, "doesn't overlap.")
                return
            }
            print("  Scanner", scanner.id, "DOES overlap!")
            
            lock.lock()
            overlappingScanners.append((scanner, transform.rotation, transform.translation))
            lock.unlock()
        }
        
        return overlappingScanners
    }

    private func generateTransform(towards otherScanner: Scanner) -> (rotation: simd_float3x3, translation: SIMD3<Float>)? {
        for rotation in rotationMatrices {
            for ourBeacon in beacons {
                for otherBeacon in otherScanner.beacons {
                    let translation = otherBeacon - (rotation * ourBeacon)

                    let overlappingBeaconCount = beacons.filter { ourBeacon in
                        let transformedBeacon = rotation * ourBeacon + translation
                        return otherScanner.beacons.contains { otherBeacon in
                            transformedBeacon == otherBeacon
                        }
                    }.count

                    if overlappingBeaconCount >= 12 {
                        return (rotation, translation)
                    }
                }
            }
        }
        return nil
    }
}

let scanners = input.enumerated().map {
    Scanner(id: $0.offset, beacons: $0.element)
}

// Part 1
let combinedBeacons = Set(scanners.first!.beaconsCombined(with: Array(scanners.dropFirst())).beacons)
print("Beacon count:", combinedBeacons.count)

// Part 2
let maxPos = scanners.first!.relativeScannerPositions(scanners: Array(scanners.dropFirst()))
    .positions
    .map { abs($0.x) + abs($0.y) + abs($0.z) }
    .max()!
print("Largest Manhattan distance:", maxPos)
