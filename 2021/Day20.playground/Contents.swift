//let algorithm = Array
//let image = [
//    "#..#.",
//    "#....",
//    "##..#",
//    "..#..",
//    "..###",
//].map { row in Array(row) }

let algorithm = Array
let image = [
    ".##...##..####.##.##.#...######.#.#..#.#.#..#.#.#.##....##.#..#..#..####.#..########.##.###.#.##.###",
    "####.....##.#...#.###...#.##.......##.#...#######.......#..#..#...#.#.....##.#.##.####.....#.###.#..",
    "........#.###.#..#####..#.##.###.#..#..#.#..##..#...#...#.....##..##.....##.#####.#..##.#..#.###...#",
    "..#.#.#.####...........#...#.........#####.#.######..#...##..#.##.#..#.....###.##.##.......####.###.",
    "..#.....###..#.####...#########.....#.#.####..##..###..####.#.##..####.#.###.##......#..#.#.#.#.....",
    ".#......#.....#..########.####....##....##..#...###...#.#####...#.#...#.#........##########.##.##.##",
    "###..###.#.###....###.....##....##.#....###..#....###....####.##..#...#....########.##.#.#.#.......#",
    "#..####..######.#.###..###...#......#######..#..##.######..##.#####......###...#.#.##..##.##.#.#..#.",
    "#....###.#.##...##..#.######..#.##..##..###.##....#.#.#....#..####..#....#.#...##.##.....###.##..###",
    ".##.###..#..###..##.....#.#....##.###.#..#..##..######..##.##..##...#.###.#.#...#.####..#..#..###.#.",
    "###..#.##..##.#.#......#####....##..##.#.#.#.##...#.##..###....##..###...#...###.########..#.#..###.",
    ".#...#.###..##..#..##.....##...#.#...##.#.###.##.#..#.#.#.###..#.###....##.....##...######....#.##.#",
    "#####..#####..##.#......#.#..#...#.##.##.#.....#.##.#..###.###.##..###.###.#......###.##..#.....#..#",
    "#.###..##..###..#..#..#.#..##.#.##.#..#....#..#....#.######..###.##....###.##..#.#..##.....#####.#.#",
    "...#..#..##...#.####.###.....#...##.#.#.####.#...###....#..##...#......#######..##..##..#...#..#.###",
    "...##.#.#######.#.#.#..#.####.##.##..###..#####.###..#.....##......#####.#.....##..##.#...###.##.###",
    "#.#...#.#.#.#....##.##...#...#.....#..###.##..#.#.#..#.##..#..#######.#.....###.######...#######..##",
    "##.#.#.#..##...#.##.#.#..#...#.#.####.##.##..#.#.#.#...##.##..#....###..####.#..#.#....#....#######.",
    "#.....##....##.......##..#.##.#..#.##.....##.#.......##.###.###.#.##.#..#..#.#....####..#####.#.#.#.",
    "#..#...##..###......#.##....#.###..####.#..##..##.#.##.#.##.#..########....####.##.#######.##.######",
    "###...#####...#.###.#.#..#....#..#..#.....##.#.##.#...#.###.#.....##....#.##.#...###.#...#.#..#.#...",
    "##..##...##..#.###.###..#..####..#...##.#.#.###.###..#####.##..##.#.##..###..#######.##....#.##.#..#",
    ".##..#...#####.####..###.#..###..##..#..#.##..#........#..###..#.#....#.#....##...#.#.####....#.##.#",
    "#...#.#.#####...##..####.###.#..#.##.#...#..##........#.#####...#####....###.#...#.##.######.##.#...",
    "#..#..#.#.#####.##.##.#..######..##.#######.#.#..#..#.......#..#.####.#...##..###..#####.###.#...#..",
    "..#.#.##.#.......#.#.#.#.##.##.#.#####..#.....####..#....#.#..########.#.#....#....#.####.#####.#.##",
    "#######.###..#...#####...#####...#.#.####.#......##.#..##.###.####..##..#######..#.##.####..###.##..",
    "#..#....#.#..##.####.#..#.######......#.##..##...##........###.########..##.#####.#..#..######.#..##",
    "#######.###########..##...#.#....#.###..#..#...#..#.....#.##.##..#.#.....#..######.####..#.#.#....#.",
    "#.###.###...##.#..##....##..#..###..#...#.##.####.#####.#.#######.#.#....#....#...#.##...##..#..#...",
    ".#.####..#####..##....##.#.....#####..##.#.....#..#...##.##..#.######....#..##.######....#.#..###.#.",
    "#..##.#.##..##.#.....##.#...#.##.#######.###.###.##.#...#.##..#####...###.##.###.##.##..###.#..#..##",
    "#.#.#.#.....###...#.###...##.#..#..##...#.#....#.#.#.#.#.##.......#.#####........#######..##.#.....#",
    "#.#...#.#.##..#.##....#.##.#.#..###.#...#..#...###.##...#...###...###..###.#.#..##.#.#.#.##.#.###.#.",
    "..#...#.#.#.#######...###.#.#...#..###...#.####..#..##..#.##......#...##..##.##..#...##....##..#....",
    "..#.##.##.#..##...#.#.#..##..###.#..####.#...#....#..##.#.#.....###.#.#...#.#.#.#.#..###.#.#.#.##.##",
    "...#...#.#...###..##..##.#......#.....###..####...#.#####.###.##..#.#..#...###..#..#..#.#.##..###.##",
    "..#..##.#..##.#.#....#..##.#......#.##.#....#......#..#...##.###.###.#######.##.###..##.#.###...#...",
    "###..##..###.#.##....##.#####.####.#....#.##....###..###.#......#.##.##..#....#..#..##.##...#...#..#",
    ".####.###.#..#####..#.####.#...##.#...##.##.....#.#.##.####.#...##...####..#..#####.####.#.........#",
    "##....#..#.#..#...#.###.#.##....#.##...#.#...###.##.#..#..#...#.###.###..#########.#..#..#...#...##.",
    "....#.#...###..#.##..#..###.##.#.#...##...##.#######..#.#..#..#...##.#..#..#.#.#...##..##....#....#.",
    "##.###...###.#...##.....#.#..####....#.##.....##.#.#...####...###..#...##...##...#.#.#...##.##..###.",
    "##.##.####.#.##..###.#.#....##.##.###.#.#..##.###..##.#...#..#.#......#.#..#...##...#.####.#####...#",
    ".#...#####.########.#..##.#####.#...##.........####.####.##.#.#.#.#..##..#..##..#...###.###.##..#.##",
    "..###.##...#..#..#####.##.######.#..######.#######.#..##..###.###......#.###.######...####...##..###",
    "#.##..########....#......#...#...###.#.###.....#.#####.####.##...##.##...#.###..#.########.#......#.",
    "#.######..#..####.#.#....##....#.#...##..##..###..#####.#.#.....#####.#.#.#.#...#..#...#####.#......",
    "#.....#.##.......#...#.#..##.#########.###.#.#.#.##.#..####...#.####.###...#.#.....#.#####.#..#.###.",
    "##.#.#...##.##..#.....###..#....###.#..#.#...#..#.##.##.#....#.####.#.#...##...##.....###..###..#..#",
    ".#.##....#..####...##.###...#..#...#.#..#..#.##.##...#.#...#..#.#####.###.##.........####..##.##.#.#",
    "#.#.####.#.#..#.#..##....#.##.#.#.####..#......#.##....###.###.#...##..#..#..######..#.#..#....#.#..",
    ".####...###.##.##.#.#.#.##.#.....#..##.#.###.#.##...#.#.#..#.############..##.#.#...#...###.#..###.#",
    "..##.#..#.##.#.#.##.#......###..#....##.##..##.#....####.####..#.#.#.##.#...#.#...##..##.##..#..#.#.",
    "###..#..#########.##.#.#.##...###...#..#...##.#.#.#.###..##...###.##....#..######...##.#.#..###.#..#",
    ".#####...##.##.##.#.#.####.#.##.###..##.###.###....####..###.#.####..##.####...#.#......##.#...#####",
    "##.##..#..#.####.....###.#....#..######.##..###..#.#.##..#.#.####.....##..#####.#.#####.####..#.#.##",
    "#....##.#.......##.#.#...##..#..#...##.#.#.#..###....#..#..##.#.#.#..#..##....####.###..##.#.##.#.##",
    "########.##.#.##.##.###....##.#..##.#####...###..####.#...##....#..#..#....#.##...##.#.#.####.#....#",
    ".######..#...#.........#..#...#.#..###...#.##.##.#....##..#.##.##..#.####.#..#####.###...#..#......#",
    "##.######..######.##...#....####...#..#.##.#..#..#..#.#..##.#..###.#.##..#..#.##.###.#...##..##..#..",
    "##..#####...##.#..#...###.#...##.#####.##..#.....##.#.#.##.#.#.....###.....##.##...##..#..##.##.####",
    "#.##.#.#..#....#.##...##.####.##....#.##.#.##.....#.##....####.##...##..#.##.##..#.#.##.#.####.##.##",
    "...#...#.###......###...#..######.######.##.##.###.#..#...#..#.#.#.#.#.#..###...#...##..###...#.#.#.",
    "..#.#.##.#...###.#.##.###....#......#.#.###.####.###..#.#..#.#..###..#.##...#######.###..#.#.##.....",
    "..#..###...#.##.....#..#...#.#..######.#######..#.###.##.#...###..#..#.##....#..##......#.#.#...#.##",
    "#......####...#...###..#...#.#....####..#.#..........####.###....##.#.##.....#....##..#..#....####.#",
    ".####...#.##......#####.###........#######.#.##..###.#.......####.##.##.##.....#...#....###..#..##.#",
    "....#.####..#.....##.#..#.##...####.#.....#.##.#...#..####....#.#.#.##.#...###.#..#...#######...#.##",
    "##.####...#.#.#.###.#.###...#.....#.#.....#.#.#.##..#....###....##..#.#.###..#.#....#..##....##..#..",
    ".#....#.#.##..####..######.##......#.##...#.##..##....##..##....##.######.#.##.#...##.#...#.##.##...",
    "..##.##.#..####.##.###..#.#.###..#...#..#..##..###.#.....#.......#..#...##..#.###...###...#..##.#.#.",
    ".#.##.#.#.##.#.#....####.##.###.##...########....#.###....#.##..#.#...#..##.###...#.#..##.......###.",
    "#..#..#.#.#.#.....####.###.....##..#.####...###..##..##..###.#.##....#..#.##.###..##...#####.##.##..",
    "###.#..#.##.##...########..#..#...###.##..#.#.#..#.####.###.###.#.#.##..###...######.###.#.....##...",
    "..#.##.##..##.#.###...#..##...#.......####.......###........##.##......#.#.#.#..#.####.##....#.##...",
    "#.####.#.#.###.#####.##...#..#.#...#....###..##..######.##.#.#.....#.....##....#..#......###.####...",
    "##.##........#.##.##.#####.###.#....#....######.#.######........##...##.####.#...##...############..",
    "#.#.##.#.###.###.##..##.#.##...#####...##.##.#....###.#..###.#.#.#.#.#..#..#......####.........##...",
    "#......##.###.#..#.....#.#.#..##..##..#..#.#####....###.#.#..#...#..#.#.##.##.##.#...#....#.#.#.#.#.",
    "...##...##.##########..#...####...#.#.##..##....#.#.#..##.#..#....##.####..#.#######.####...##.#....",
    "#.###..#####..##.#.#..###.#.#.#..##..##.####.###.#.#..#.##.#####.#.#########.##.###...########..#..#",
    ".##.####.#....##...##.####..#....#..###..##...#.#.###........###.##########..##.....#.######.#.##...",
    "..###.#..#.###.####...#####...##.###.###.....#....####..###.#...##.####.#.##.##.#..#..###.#...#.#...",
    "#.#...#...#..#..#...##.###.###..#.####...##.##.#.......###.###.#...#....#.#..#.#.#.###....#...#.#.#.",
    "###.##.#..######..##..#.#..#####...#...#.##.#..##...#######......##.######...#.#.#.#######.####....#",
    "#..#.#######..#..#####...#.....#..#..##.#...#...#.##..#####.....##..############.##.###.##.#.####.##",
    "#.##.#...#...#....##.....###.#.#..#.#..##....##.##.#.###..#.###.##.#..#####.#.#######...###..#..#.##",
    "##.#.....#.#.#..###..#..####..#..##.#.#....#.#..##...#..#..##..#.#.#..##.#.##...##...#####..#.#.##.#",
    ".##....###....##.#.#.##.####...#...###...#..#.#.##..#####........#...#..#.##.##.#..#....#..#.#.#.#.#",
    ".#######.#.##..#.##.#####.#######.#.#......#..#..#..##..##.#...##.##....#......#...#.#...###....###.",
    "....###.#..###...#...#.#..#.####.##....#....#####..###..#..###.#....#.#.#.#.#####...#.#...##.###....",
    "..##.######..#.#.###.########.##.####..##..#.#.....###.#.#.####.#...#.#..#####.##..#..#.###....#..#.",
    ".##.#...###.....#..#.#...#####.#.#.####.....#.....###.#.####.#####...#..##.##########.#.##########..",
    ".###..#.#.######.#.##.#.####.#.#.##.#.##.####.##..#...##..#######.........##..#.#....##.#.#######.#.",
    "##.##.##..#...#.###.#...####..##..####.#.#.##.##.#....####.####....#.#..###.##.##....#####..#.##.#.#",
    "#........#.##.#...#.##.....#.###.#..##.##..#..##..#.....###.#.#.#.##.###..#.#.....#..#.#.#.###.#.###",
    "####.#.#####......#.##..#.####.#.....##.######..#..#..#.##..#.#.#..#..####...#.#...#.##.......#....#",
    "##.#.##..#..####.#.#..#..#.##...#.#.#.#...#.#.#.#.#..#.....###.#...#.....#...###....###.##..#.#.#..#",
    ".####.....#...##..##.####.#.#.###......##.###...#..#..###.##..##.##...##...###.....#..##.##.#.###...",
].map { row in Array(row) }

typealias Pixel = String.Element
typealias Image = [[String.Element]]
typealias Position = (row: Int, col: Int)

func enhance(input: (image: Image, infinityPixel: String.Element)) -> (image: Image, infinityPixel: String.Element) {
    let darkRow: Image = [Array(repeating: input.infinityPixel, count: image.first!.count + 2)]
    let paddedImage = darkRow + input.image.map { row in [input.infinityPixel] + row + [input.infinityPixel] } + darkRow

    let enhancedImage = (0..<paddedImage.count).map { row  in
        (0..<paddedImage.first!.count).map { col -> String.Element in
            let binary = neighbours(of: (row, col))
                .map { position in
                    return pixel(at: position, in: paddedImage, infinityPixel: input.infinityPixel) == "#" ? "1" : "0"
                }
                .joined()
            let decimal = Int(binary, radix: 2)!
            print("center", (row, col))
            print("binary", binary)
            print("decimal", decimal)
            print("algorithm", algorithm[decimal])
            print("---")
            return algorithm[decimal]
        }
    }

    let binary = String(repeating: input.infinityPixel == "#" ? "1" : "0", count: 9)
    let decimal = Int(binary, radix: 2)
    let infinityPixel = algorithm[decimal!]
    print("infinityPixel", infinityPixel)
    return (enhancedImage, infinityPixel)
}

func neighbours(of position: Position) -> [Position] {
    return [
        (position.row-1, position.col-1),
        (position.row-1, position.col),
        (position.row-1, position.col+1),

        (position.row, position.col-1),
        (position.row, position.col),
        (position.row, position.col+1),
        
        (position.row+1, position.col-1),
        (position.row+1, position.col),
        (position.row+1, position.col+1),
    ]
}

func pixel(at position: Position, in image: Image, infinityPixel: String.Element) -> String.Element {
    guard position.row >= image.startIndex && position.row < image.endIndex else { return infinityPixel }
    let row = image[position.row]
    
    guard position.col >= row.startIndex && position.col < row.endIndex else { return infinityPixel }
    return row[position.col]
}

//enhance(image: image).forEach { row in
//    print(String(row))
//}

print(enhance(input: enhance(input: (image, ".")))
    .image
    .flatMap { row in
        row.filter { pixel in pixel == "#"}
    }
    .count)
